#!/usr/bin/env ruby
# frozen_string_literal: true

require 'debug'
require_relative 'solution'
# input = <<~TEST_INPUT
#   190: 10 19
# TEST_INPUT

input = <<~TEST_INPUT
  190: 10 19
  3267: 81 40 27
  83: 17 5
  156: 15 6
  7290: 6 8 6 15
  161011: 16 10 13
  192: 17 8 14
  21037: 9 7 18 13
  292: 11 6 16 20
TEST_INPUT

# input = IO.read('input.txt')

input.split("\n").each do |line|
  total, rest = line.split(":")
  nums = rest.split.map(&:to_i)

  root_node = Node.new(v: nums.shift, edges: [], depth: 0)
  prev_node = root_node

  nums.each do |n|
    current_node = Node.new(v: n, edges: [], depth: prev_node.depth + 1)
    prev_node.edges << Edge.new(node: current_node, v: :*)
    prev_node.edges << Edge.new(node: current_node, v: :+)
    prev_node = current_node
  end


  graph = Graph.new(root: root_node)

  graph.paths do |p|
    puts p.join
  end
  # puts graph.to_s

end




