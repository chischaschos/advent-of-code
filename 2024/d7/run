#!/usr/bin/env ruby
# frozen_string_literal: true

require 'debug'
# require_relative 'solution'
input = <<~TEST_INPUT
  190: 10 19
TEST_INPUT

# input = <<~TEST_INPUT
#   190: 10 19
#   3267: 81 40 27
#   83: 17 5
#   156: 15 6
#   7290: 6 8 6 15
#   161011: 16 10 13
#   192: 17 8 14
#   21037: 9 7 18 13
#   292: 11 6 16 20
# TEST_INPUT

# input = IO.read('input.txt')

input.split("\n").each do |line|
  total, rest = line.split(":")
  nums = rest.split.map(&:to_i)

  adj_list = {}

  first_num = nums.shift
  prev = [
    [:*, first_num], [:+, first_num]
  ]
  root = prev

  nums.each do |num|
    ops = [[:*, num], [:+, num]]
    adj_list[prev.first] = ops.clone
    adj_list[prev.last] = ops.clone
    prev = ops
  end

  puts adj_list.inspect

  pending = [root.first, root.last]
  visited = []

  loop do
    debugger
    break if pending.empty?

    node = pending.shift
    visited << node # unless already there?
    children = adj_list[node]

    if children.nil?
      # reached end
      visited = []
    else
      pending.unshift(*children)
    end
  end

  debugger
end




